{"version":3,"sources":["components/Navbar.js","components/Home.js","actions/cartActions.js","actions/action-types/cart-actions.js","components/Cart.js","components/Footer.js","App.js","serviceWorker.js","reducers/cartReducer.js","utilities/Items.js","index.js"],"names":["Navbar","className","to","this","props","items","length","total","wholeQuantity","React","Component","connect","state","addedItems","Home","handleClick","id","addToCart","itemList","map","item","key","src","img","alt","title","onClick","desc","price","dispatch","type","Cart","handleClickRemove","removeFromCart","handleAddQuantity","addQuantity","handleRemoveQuantity","removeQuantity","quantity","Footer","href","App","exact","path","component","Boolean","window","location","hostname","match","initState","store","createStore","action","addedItem","find","existed_item","newTotal","console","log","itemToRemove","new_items","filter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d409265.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return <nav className={'nav-wrapper orange darken-1'}>\r\n            <div className={'container'}>\r\n                <Link to={'/'} className={\"brand-logo\"}>Project</Link>\r\n                <ul className={'right'}>\r\n                    <li><Link to={'/'}>Menu</Link></li>\r\n                    <li><Link to={'/cart'}>Cart\r\n                        {this.props.items.length > 0 ? <span>: {this.props.total}$ ({this.props.wholeQuantity})</span> : <span>: Empty</span>}\r\n                    </Link></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.addedItems,\r\n        total: state.total,\r\n        wholeQuantity: state.wholeQuantity\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\nclass Home extends Component {\r\n\r\n    handleClick = (id) => {\r\n        this.props.addToCart(id);\r\n    }\r\n\r\n    render() {\r\n        let itemList = this.props.items.map(item => {\r\n            return (\r\n                <div className=\"card\" key={item.id}>\r\n                    <div className=\"card-image\">\r\n                        <img src={item.img} alt={item.title}/>\r\n                        <span className=\"card-title\">{item.title}</span>\r\n                        <span to=\"/\" className=\"btn-floating halfway-fab waves-effect waves-light light-green darken-1\"><i\r\n                            className=\"material-icons\" onClick={() => {\r\n                            this.handleClick(item.id)\r\n                        }}>add</i></span>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <p>{item.desc}</p>\r\n                        <p><b>Price: {item.price}$</b></p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 className=\"center\">Menu</h4>\r\n                <div className=\"box\">\r\n                    {itemList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.items\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addToCart: (id) => {\r\n            dispatch(addToCart(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from './action-types/cart-actions'\r\n\r\nexport const addToCart = (id) => {\r\n\r\n    return {\r\n        type: ADD_TO_CART,\r\n        id\r\n    }\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n\r\n}\r\n\r\nexport const addQuantity = (id) => {\r\n\r\n    return {\r\n        type: ADD_QUANTITY,\r\n        id\r\n    }\r\n\r\n}\r\n\r\nexport const removeQuantity = (id) => {\r\n\r\n    return {\r\n        type: SUB_QUANTITY,\r\n        id\r\n    }\r\n\r\n}\r\n","export const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const SUB_QUANTITY = 'SUB_QUANTITY';\r\nexport const ADD_QUANTITY = 'ADD_QUANTITY';\r\nexport const ADD_SHIPPING = 'ADD_SHIPPING';\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {addQuantity, removeFromCart, removeQuantity} from \"../actions/cartActions\";\r\n\r\nclass Cart extends Component {\r\n\r\n    handleClickRemove = (id) => {\r\n        this.props.removeFromCart(id);\r\n    }\r\n\r\n    handleAddQuantity = (id) => {\r\n        this.props.addQuantity(id);\r\n    }\r\n\r\n    handleRemoveQuantity = (id) => {\r\n        this.props.removeQuantity(id);\r\n    }\r\n\r\n    render() {\r\n\r\n        let addedItems = this.props.items.length ?\r\n            (\r\n                this.props.items.map(item => {\r\n                    return (\r\n\r\n                        <li className=\"card \" key={item.id}>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.img} alt={item.img}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col s6\">\r\n                                        <span className=\"title\">{item.title}</span>\r\n                                        <p>{item.desc}</p>\r\n                                        <p><b>Price: {item.price}$</b></p>\r\n                                    </div>\r\n                                    <div className=\"col s6 text-right center-block\">\r\n                                        <p>\r\n                                            <b>Q: {item.quantity}</b>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons quantity-btn\"\r\n                                                                onClick={(id) => this.handleAddQuantity(item.id)}>arrow_drop_up</i></Link>\r\n                                            <Link to=\"/cart\"><i className=\"material-icons quantity-btn\"\r\n                                                                onClick={(id) => this.handleRemoveQuantity(item.id)}>arrow_drop_down</i></Link>\r\n\r\n                                            <button className=\"btn red remove\"\r\n                                                    onClick={() => this.handleClickRemove(item.id)}>\r\n                                                <i className=\"material-icons\"\r\n                                                   onClick={(id) => this.handleAddQuantity(item.id)}>delete</i>\r\n                                            </button>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </li>\r\n                    )\r\n                })\r\n            ) :\r\n\r\n            (\r\n                <p>Your cart is empty.</p>\r\n            )\r\n        return (\r\n            <div className=\"container\">\r\n                <h4 className=\"center\">Your cart</h4>\r\n                <ul className=\"box shopping-cart\">\r\n                    {addedItems}\r\n                </ul>\r\n                <hr/>\r\n                <div className={'text-right'}>\r\n                    <h5>Total: {this.props.total} $</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.addedItems,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nconst mapDispatchFromProps = (dispatch) => {\r\n    return {\r\n        removeFromCart: (id) => dispatch(removeFromCart(id)),\r\n        addQuantity: (id) => dispatch(addQuantity(id)),\r\n        removeQuantity: (id) => dispatch(removeQuantity(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchFromProps)(Cart)\r\n","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return <footer className=\"page-footer orange darken-1\">\r\n            <div className=\"footer-copyright\">\r\n                <div className=\"container\">\r\n                    {/*© 2019 TTRACZ*/}\r\n                    <a className=\"black-text\" href=\"http://github.com/ttracz\">\r\n                        <img src=\"https://image.flaticon.com/icons/svg/25/25231.svg\" className=\"github-icon\"/> see my git\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        items: state.addedItems,\r\n        total: state.total,\r\n        wholeQuantity: state.wholeQuantity\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Footer)\r\n","import React from 'react';\nimport Navbar from './components/Navbar'\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Cart from \"./components/Cart\";\nimport './styles/styles.css'\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <main>\n                    <Navbar/>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}/>\n                        <Route path=\"/cart\" component={Cart}/>\n                    </Switch>\n                </main>\n                <Footer/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_QUANTITY, ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY} from '../actions/action-types/cart-actions'\r\nimport {items} from '../utilities/Items'\r\n\r\nconst initState = items\r\n\r\nexport const cartReducer = (state = initState, action) => {\r\n\r\n    if (action.type === ADD_TO_CART) {\r\n        let addedItem = state.items.find(item => item.id === action.id)\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if (existed_item) {\r\n            addedItem.quantity += 1\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price,\r\n                wholeQuantity: state.wholeQuantity + 1\r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            let newTotal = state.total + addedItem.price\r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total: newTotal,\r\n                wholeQuantity: state.wholeQuantity + 1\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action.type === REMOVE_ITEM) {\r\n        console.log(action)\r\n        let itemToRemove = state.addedItems.find(item => item.id === action.id)\r\n        let new_items = state.addedItems.filter(item => action.id !== item.id)\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity)\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal,\r\n            wholeQuantity: state.wholeQuantity - itemToRemove.quantity\r\n        }\r\n    }\r\n\r\n    if (action.type === ADD_QUANTITY) {\r\n        let addedItem = state.addedItems.find(item => item.id === action.id)\r\n        addedItem.quantity += 1\r\n        let newTotal = state.total + addedItem.price\r\n        return {\r\n            ...state,\r\n            total: newTotal,\r\n            wholeQuantity: state.wholeQuantity + 1\r\n        }\r\n    }\r\n\r\n    if (action.type === SUB_QUANTITY) {\r\n        let addedItem = state.items.find(item => item.id === action.id)\r\n        if (addedItem.quantity === 1) {\r\n            let new_items = state.addedItems.filter(item => item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal,\r\n                wholeQuantity: state.wholeQuantity - 1\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                total: newTotal,\r\n                wholeQuantity: state.wholeQuantity - 1\r\n            }\r\n        }\r\n    } else {\r\n        return state\r\n    }\r\n}\r\n","export const items = {\r\n    items: [\r\n        {\r\n            id: 1,\r\n            title: 'Spaghetti bolognese',\r\n            desc: \"Delicious dish for Italian food lovers\",\r\n            price: 9,\r\n            img: 'https://www.kwestiasmaku.com/sites/kwestiasmaku.com/files/spaghetti_bolognese_01.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Teriyaki chicken',\r\n            desc: \"Wonderful chicken with teriyaki sauce and salad\",\r\n            price: 11,\r\n            img: 'https://www.dinneratthezoo.com/wp-content/uploads/2018/06/slow-cooker-teriyaki-chicken-1.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Grilled potatoes',\r\n            desc: \"Awesome taste, recommended for little hunger, served with garlic sauce\",\r\n            price: 7,\r\n            img: 'https://s23991.pcdn.co/wp-content/uploads/2012/08/roasted-potatoes-grilled.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Diet coke',\r\n            desc: \"Classic taste with no calories\",\r\n            price: 4,\r\n            img: 'https://amp.insider.com/images/5c2df92901c0ea30d9197432-750-563.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'Sparkling water',\r\n            desc: \"Served with lemon on request.\",\r\n            price: 3,\r\n            img: 'http://microfinanceledger.com/wp-content/uploads/2019/08/Alcoholic-Carbonated-Water.jpg'\r\n        },\r\n    ],\r\n    addedItems: [],\r\n    total: 0,\r\n    wholeQuantity: 0\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'materialize-css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport {cartReducer} from \"./reducers/cartReducer\";\n\nconst store = createStore(cartReducer);\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}